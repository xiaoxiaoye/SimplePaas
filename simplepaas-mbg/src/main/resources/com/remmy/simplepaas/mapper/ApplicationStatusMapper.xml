<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.remmy.simplepaas.mapper.ApplicationStatusMapper">
  <resultMap id="BaseResultMap" type="com.remmy.simplepaas.model.ApplicationStatus">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="app_id" jdbcType="INTEGER" property="appId" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
    <result column="target_num" jdbcType="INTEGER" property="targetNum" />
    <result column="available_num" jdbcType="INTEGER" property="availableNum" />
    <result column="update_num" jdbcType="INTEGER" property="updateNum" />
    <result column="ready_num" jdbcType="INTEGER" property="readyNum" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, app_id, app_name, target_num, available_num, update_num, ready_num, update_time, 
    create_time
  </sql>
  <select id="selectByExample" parameterType="com.remmy.simplepaas.model.ApplicationStatusExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from application_status
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from application_status
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from application_status
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.remmy.simplepaas.model.ApplicationStatusExample">
    delete from application_status
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.remmy.simplepaas.model.ApplicationStatus">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into application_status (app_id, app_name, target_num, 
      available_num, update_num, ready_num, 
      update_time, create_time)
    values (#{appId,jdbcType=INTEGER}, #{appName,jdbcType=VARCHAR}, #{targetNum,jdbcType=INTEGER}, 
      #{availableNum,jdbcType=INTEGER}, #{updateNum,jdbcType=INTEGER}, #{readyNum,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.remmy.simplepaas.model.ApplicationStatus">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into application_status
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        app_id,
      </if>
      <if test="appName != null">
        app_name,
      </if>
      <if test="targetNum != null">
        target_num,
      </if>
      <if test="availableNum != null">
        available_num,
      </if>
      <if test="updateNum != null">
        update_num,
      </if>
      <if test="readyNum != null">
        ready_num,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appId != null">
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
      <if test="targetNum != null">
        #{targetNum,jdbcType=INTEGER},
      </if>
      <if test="availableNum != null">
        #{availableNum,jdbcType=INTEGER},
      </if>
      <if test="updateNum != null">
        #{updateNum,jdbcType=INTEGER},
      </if>
      <if test="readyNum != null">
        #{readyNum,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.remmy.simplepaas.model.ApplicationStatusExample" resultType="java.lang.Long">
    select count(*) from application_status
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update application_status
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=INTEGER},
      </if>
      <if test="record.appName != null">
        app_name = #{record.appName,jdbcType=VARCHAR},
      </if>
      <if test="record.targetNum != null">
        target_num = #{record.targetNum,jdbcType=INTEGER},
      </if>
      <if test="record.availableNum != null">
        available_num = #{record.availableNum,jdbcType=INTEGER},
      </if>
      <if test="record.updateNum != null">
        update_num = #{record.updateNum,jdbcType=INTEGER},
      </if>
      <if test="record.readyNum != null">
        ready_num = #{record.readyNum,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update application_status
    set id = #{record.id,jdbcType=INTEGER},
      app_id = #{record.appId,jdbcType=INTEGER},
      app_name = #{record.appName,jdbcType=VARCHAR},
      target_num = #{record.targetNum,jdbcType=INTEGER},
      available_num = #{record.availableNum,jdbcType=INTEGER},
      update_num = #{record.updateNum,jdbcType=INTEGER},
      ready_num = #{record.readyNum,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.remmy.simplepaas.model.ApplicationStatus">
    update application_status
    <set>
      <if test="appId != null">
        app_id = #{appId,jdbcType=INTEGER},
      </if>
      <if test="appName != null">
        app_name = #{appName,jdbcType=VARCHAR},
      </if>
      <if test="targetNum != null">
        target_num = #{targetNum,jdbcType=INTEGER},
      </if>
      <if test="availableNum != null">
        available_num = #{availableNum,jdbcType=INTEGER},
      </if>
      <if test="updateNum != null">
        update_num = #{updateNum,jdbcType=INTEGER},
      </if>
      <if test="readyNum != null">
        ready_num = #{readyNum,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.remmy.simplepaas.model.ApplicationStatus">
    update application_status
    set app_id = #{appId,jdbcType=INTEGER},
      app_name = #{appName,jdbcType=VARCHAR},
      target_num = #{targetNum,jdbcType=INTEGER},
      available_num = #{availableNum,jdbcType=INTEGER},
      update_num = #{updateNum,jdbcType=INTEGER},
      ready_num = #{readyNum,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>